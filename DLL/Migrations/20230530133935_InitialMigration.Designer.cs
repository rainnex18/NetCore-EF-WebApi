// <auto-generated />
using System;
using DAL.Models.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AcmeDbContext))]
    [Migration("20230530133935_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.DB.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(190)
                        .HasColumnType("nvarchar(190)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9817),
                            Email = "alice@email.com",
                            FirstName = "Alice",
                            LastName = "A",
                            Phone = "1234567890",
                            UpdatedBy = "System",
                            UpdatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9818)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9820),
                            Email = "benji@email.com",
                            FirstName = "Benji",
                            LastName = "B",
                            Phone = "1234567890",
                            UpdatedBy = "System",
                            UpdatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9820)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9821),
                            Email = "carry@email.com",
                            FirstName = "Carry",
                            LastName = "C",
                            Phone = "1234567890",
                            UpdatedBy = "System",
                            UpdatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9822)
                        });
                });

            modelBuilder.Entity("DAL.Models.DB.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descs")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 4)")
                        .HasDefaultValue(0m);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9934),
                            Descs = "Fresh, Organic",
                            ImgUrl = "https://picsum.photos/200/300",
                            Name = "Cherry Tomato",
                            Price = 50m,
                            UpdatedBy = "System",
                            UpdatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9934)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9936),
                            Descs = "Originating in Denmark",
                            ImgUrl = "https://picsum.photos/200/300",
                            Name = "Butter Cookie",
                            Price = 80m,
                            UpdatedBy = "System",
                            UpdatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9937)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9938),
                            Descs = "It's a uniquely sourced spring water that's always refreshing and naturally hydrating, with nothing added for taste",
                            ImgUrl = "https://picsum.photos/200/300",
                            Name = "Evian Natural Spring Water",
                            Price = 4m,
                            UpdatedBy = "System",
                            UpdatedDate = new DateTime(2023, 5, 30, 13, 39, 35, 826, DateTimeKind.Utc).AddTicks(9938)
                        });
                });

            modelBuilder.Entity("DAL.Models.DB.Review", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("DAL.Models.DB.Review", b =>
                {
                    b.HasOne("DAL.Models.DB.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.DB.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DAL.Models.DB.Customer", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("DAL.Models.DB.Product", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
